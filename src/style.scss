body {
  background-color: #000;
  min-height: 100vh;
  display: grid;
  place-items: center;
  overflow: hidden;
  perspective: 800px;
  
  *:not(:empty) {
    transform-style: preserve-3d;
  }
}

.scene {
  position: relative;
  transform: 
    rotateX(-30deg)
    rotateY(30deg);
}

$duration: 10s;

.laser {
  position: absolute;
  inset: -100vh -1px;
  background: coral;
  box-shadow: 
    0 0 5px red,
    0 0 10px red,
    0 0 15px red,
    0 0 25px red,
    0 0 40px red;
  transform-origin: top;
  animation:
     laser $duration infinite linear,
     laserScale $duration infinite step-end;
  
  @keyframes laser {
    0% { opacity: 0; translate: 0 0 -120px; }
    10% { opacity: 1;  translate: 0 0 -120px;}
    70% { opacity: 1;  translate: 0 0 120px;}
    80%, 100% { opacity: 0;  translate: 0 0 120px;}
  }
  
  @keyframes laserScale {
    0%, 60% { scale: 1; }
    25%, 55% { scale: 0.5; animation-timing-function: ease-in-out; }
  }
}

.panel {
  width: 400vh;
  animation: panel $duration infinite ease-in-out;
  
  @keyframes panel {
    0%, 55%, 100% { translate: 120px; }
    10% { translate: 0px; animation-timing-function: step-end; }
  }
}

.sparks {
  position: absolute;
  
  i {
    position: absolute;
    inset: -16px;
    background-color: hsl(var(--hue) 100% 50%);
    transform: translateZ(var(--tz));
    animation: spark $duration var(--delay) infinite ease-out backwards;
    
    @keyframes spark {
      0%, 25% { opacity: 1; transform: translate3d(0, 0, var(--tz)) rotateX(0) rotateY(0) scale(0); }
      30%, 100% { opacity: 0; transform: translate3d(var(--tx), var(--ty), var(--tz)) rotateX(var(--rx)) rotateY(var(--ry)) scale(1); }
    }
    
    @for $i from 1 through 120 { 
      &:nth-child(#{$i}) {
        --tz: #{$i - 60}px;
        --delay: #{$duration * 0.3 / 120 * $i};
        --tx: #{random(120) - 60}px;
        --ty: #{random(120) - 180}px;
        --rx: #{random(360) - 180}deg;
        --ry: #{random(360) - 180}deg;
        --hue: #{random(50) - 10};
      }
    } 
  }
}

.drop {
  width: 120px;
  animation: drop $duration infinite step-end;
  
  @keyframes drop {
    0%, 100% { translate: 0 100vh; }
    55% { translate: 0 0; animation-timing-function: ease-in; }
  }
}

.panel, .drop {
  transform-style: preserve-3d;
  position: absolute;
  top: -60px;
  left: -120px;
  height: 120px;
  background: white;
  rotate: x 90deg;
  background-image: repeating-linear-gradient(45deg, transparent 0, 20px, #4321 28.285px);
  box-shadow: 0 0 40px #000a inset;

  &::before, &::after {
    content: '';
    position: absolute;
    box-shadow: inherit;
    background-color: inherit;
    background-image: inherit;
 }
  
  &::before {
    inset: 0;
    transform-origin: bottom;
    rotate: x 90deg;
  }
  
  &::after {
    width: 120px; height: 120px;
    transform-origin: left;
    rotate: y 90deg;
  }
}

.cutLine {
  position: absolute;
  left: 60px;
  width: 120px; height: 120px;
  overflow: hidden;

  &::before, &::after {
    content: '';
    background-color: #f0f4;
    position: absolute;
    inset: 0;
    box-shadow: 0 0 40px #000a;
    animation: cutLine $duration infinite linear backwards;

    @keyframes cutLine {
      0%, 25%, 100% { transform: translate(var(--tx), -100%); }
      55% { transform: translate(var(--tx), 0%); animation-timing-function: step-start; }
    }
  }

  &::before {
    --tx: -50%;
    clip-path: polygon(100% 0, 100% 150%, 150% 150%, 150% 0);
  }

  &::after {
    --tx: 50%;
    clip-path: polygon(0 0, 0 150%, -50% 150%, -50% 0);
  }
}